// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ExercisesColumns holds the columns for the "exercises" table.
	ExercisesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "url", Type: field.TypeString, Size: 2048},
		{Name: "program_exercises", Type: field.TypeInt, Nullable: true},
		{Name: "workout_exercises", Type: field.TypeInt, Nullable: true},
	}
	// ExercisesTable holds the schema information for the "exercises" table.
	ExercisesTable = &schema.Table{
		Name:       "exercises",
		Columns:    ExercisesColumns,
		PrimaryKey: []*schema.Column{ExercisesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "exercises_programs_exercises",
				Columns:    []*schema.Column{ExercisesColumns[5]},
				RefColumns: []*schema.Column{ProgramsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exercises_workouts_exercises",
				Columns:    []*schema.Column{ExercisesColumns[6]},
				RefColumns: []*schema.Column{WorkoutsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProgramsColumns holds the columns for the "programs" table.
	ProgramsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// ProgramsTable holds the schema information for the "programs" table.
	ProgramsTable = &schema.Table{
		Name:       "programs",
		Columns:    ProgramsColumns,
		PrimaryKey: []*schema.Column{ProgramsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "programs_users_programs",
				Columns:    []*schema.Column{ProgramsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"admin", "user"}, Default: "user"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// WorkoutsColumns holds the columns for the "workouts" table.
	WorkoutsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// WorkoutsTable holds the schema information for the "workouts" table.
	WorkoutsTable = &schema.Table{
		Name:       "workouts",
		Columns:    WorkoutsColumns,
		PrimaryKey: []*schema.Column{WorkoutsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workouts_users_workouts",
				Columns:    []*schema.Column{WorkoutsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ExercisesTable,
		ProgramsTable,
		UsersTable,
		WorkoutsTable,
	}
)

func init() {
	ExercisesTable.ForeignKeys[0].RefTable = ProgramsTable
	ExercisesTable.ForeignKeys[1].RefTable = WorkoutsTable
	ProgramsTable.ForeignKeys[0].RefTable = UsersTable
	WorkoutsTable.ForeignKeys[0].RefTable = UsersTable
}
