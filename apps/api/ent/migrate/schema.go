// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ExercisesColumns holds the columns for the "exercises" table.
	ExercisesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "video_url", Type: field.TypeString, Nullable: true, Size: 256},
		{Name: "image_url", Type: field.TypeString, Nullable: true, Size: 256},
	}
	// ExercisesTable holds the schema information for the "exercises" table.
	ExercisesTable = &schema.Table{
		Name:       "exercises",
		Columns:    ExercisesColumns,
		PrimaryKey: []*schema.Column{ExercisesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "firstname", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "lastname", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"admin", "user"}, Default: "user"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// WorkoutsColumns holds the columns for the "workouts" table.
	WorkoutsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "active", Type: field.TypeBool, Default: false},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
	}
	// WorkoutsTable holds the schema information for the "workouts" table.
	WorkoutsTable = &schema.Table{
		Name:       "workouts",
		Columns:    WorkoutsColumns,
		PrimaryKey: []*schema.Column{WorkoutsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workouts_users_workouts",
				Columns:    []*schema.Column{WorkoutsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "workout_user_id_active",
				Unique:  true,
				Columns: []*schema.Column{WorkoutsColumns[5], WorkoutsColumns[4]},
				Annotation: &entsql.IndexAnnotation{
					Where: "active = true",
				},
			},
		},
	}
	// WorkoutExercisesColumns holds the columns for the "workout_exercises" table.
	WorkoutExercisesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "exercise_id", Type: field.TypeInt},
		{Name: "workout_id", Type: field.TypeUUID},
	}
	// WorkoutExercisesTable holds the schema information for the "workout_exercises" table.
	WorkoutExercisesTable = &schema.Table{
		Name:       "workout_exercises",
		Columns:    WorkoutExercisesColumns,
		PrimaryKey: []*schema.Column{WorkoutExercisesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workout_exercises_exercises_workout_exercise",
				Columns:    []*schema.Column{WorkoutExercisesColumns[1]},
				RefColumns: []*schema.Column{ExercisesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "workout_exercises_workouts_workout_exercise",
				Columns:    []*schema.Column{WorkoutExercisesColumns[2]},
				RefColumns: []*schema.Column{WorkoutsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// WorkoutExerciseSetsColumns holds the columns for the "workout_exercise_sets" table.
	WorkoutExerciseSetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "weight", Type: field.TypeInt, Default: 0},
		{Name: "reps", Type: field.TypeInt, Default: 0},
		{Name: "workout_exercise_sets", Type: field.TypeInt, Nullable: true},
	}
	// WorkoutExerciseSetsTable holds the schema information for the "workout_exercise_sets" table.
	WorkoutExerciseSetsTable = &schema.Table{
		Name:       "workout_exercise_sets",
		Columns:    WorkoutExerciseSetsColumns,
		PrimaryKey: []*schema.Column{WorkoutExerciseSetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workout_exercise_sets_workout_exercises_sets",
				Columns:    []*schema.Column{WorkoutExerciseSetsColumns[5]},
				RefColumns: []*schema.Column{WorkoutExercisesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ExercisesTable,
		UsersTable,
		WorkoutsTable,
		WorkoutExercisesTable,
		WorkoutExerciseSetsTable,
	}
)

func init() {
	WorkoutsTable.ForeignKeys[0].RefTable = UsersTable
	WorkoutExercisesTable.ForeignKeys[0].RefTable = ExercisesTable
	WorkoutExercisesTable.ForeignKeys[1].RefTable = WorkoutsTable
	WorkoutExerciseSetsTable.ForeignKeys[0].RefTable = WorkoutExercisesTable
}
