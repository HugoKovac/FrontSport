package layouts

import "GoNext/base/templ/components"

templ BaseLayout() {
<!DOCTYPE html>
<html lang="en" class="h-full" data-theme="dim">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="/assets/js/htmx.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@5" rel="stylesheet" type="text/css" />
    <link href="https://cdn.jsdelivr.net/npm/daisyui@5/themes.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <meta name="viewport" content="width=device-width,initial-scale=1" />
</head>

<style>
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }
</style>

<body id="root" class="h-full">
    <script>
        document.body.addEventListener('htmx:beforeSwap', function (evt) {
            if (evt.detail.xhr.status === 404) {
                // alert the user when a 404 occurs (maybe use a nicer mechanism than alert())
                window.location.replace("/error/not-found")
            } else if (evt.detail.xhr.status === 422) {
                // allow 422 responses to swap as we are using this as a signal that
                // a form was submitted with bad data and want to rerender with the
                // errors
                //
                // set isError to false to avoid error logging in console
                evt.detail.shouldSwap = true;
                evt.detail.isError = false;
            } else if (evt.detail.xhr.status === 418) {
                // if the response code 418 (I'm a teapot) is returned, retarget the
                // content of the response to the element with the id `teapot`
                evt.detail.shouldSwap = true;
                evt.detail.target = htmx.find("#teapot");
            }
        });

        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('[maxlength]').forEach(input => {
                input.addEventListener('input', e => {
                    let val = e.target.value, len = +e.target.getAttribute('maxlength');
                    e.target.value = val.slice(0, len);
                })
            })
        })
    </script>


    <main id="main" class="h-full flex flex-col">
        @components.NavBar(false)
        { children... }
        <div id="toast" class="toast"></div>
    </main>
</body>

</html>
}